What are some of the pros and cons of using a cloud-hosted DBMS? Would you recommend it to a fellow student for tinkering/experimentation?  
What about recommending it to future co-workers for their project? If your answer differed, why?

Many of the pros of using a service like SQLServer comes with ease of accessibility and scalability. A cloud-hosted DBMS allows users to scale their activity based on necessity and with ease, not requiring any additional setup or work on the users end. Along this line of reasoning comes their payment model, "pay as you use", which ensures that the client is only being charged for their own activity and nothing extra. The owner of the cloud-based system is responsible ffor the maintenance, recovery, and security of their services, thus it makes a beginner or even a professional's experience more streamlined and more focused on the data they want to work on rather than the management of the backend. Scalability, as mentioned before, is a key factor - if we were to host our data on our own hardware, and let's suppose we are doing this at scale, we would have to purchase our own data centers and compute resources in order to have the capacity to store and manage our data. This process can be and is extremely expensive and hard to maintain, especially for students at a collegiate level who probably don't require that scale of resources. I would definitely recommend cloud-based DBMS to any groups of individuals that are not massive corporations (I will get into this later). I think the relatively cheap cost model paired with simply ease of use makes this the clear winner in terms of local vs cloud-hosted services.

There are a few cons that I realized while thinking about the prompt. As I mention before, maybe a cloud-based DBMS system that is not self-owned if you are working at a corporate scale may be an issue. While we are intrinsically designed to trust systems like Azure or AWS, there are always bugs or ways for attackers to backdoor a system. If your company deals with highly sensitive user data that you may want to store locally and on-premises, using a non-cloud-hosted solution may be better here. On a different note, for anybody getting started with the basics of sql queries, typically the queries will not be powerful enough to require compute resources such as Azure - this is why we have local DBMS systems such as sqlite which can handle these lightweight problems. Additionally, cloud-hosted systems require internet access as you need to be able to access your resources over the network - this can bring up issues with latency and, again, security if you are requesting senstivie data over a network. Finally, the cost of using such a service may be more expensive than simply owning your own data centers if you are using the service at a mass scale - I would imagine that since these cloud services do need to make some sort of profit, then if you are using large amounts of resources, it may not be worth the price.

All in all, for any future co-workers or students, I would definitely recommend services like Azure SQLServer due to the fact that it's easy to use, easy to setup, and easy to scale. I think this is the clear answer, especially demonstrated in the high levels of usage we see in industrial applications.
